clear_all_shortcuts yes
enabled_layouts splits,stack

# IoL stuff
map ctrl+shift+enter open_url_with_hints
map ctrl+shift+v paste_from_clipboard
map ctrl+shift+c copy_to_clipboard

# Wayland + fonts
enable_wayland yes
font_size 12.0

# Kitty remote features
allow_remote_control yes
listen_on unix:@mykitty

# Tab bar
tab_bar_edge top
tab_bar_style powerline
tab_powerline_style round
tab_title_template "{title}"
active_tab_title_template "{title}"
startup_session default_tabs.session

# ----- Tabs -----
map alt+t new_tab
map alt+w close_tab
map alt+1 goto_tab 1
map alt+2 goto_tab 2
map alt+3 goto_tab 3
map alt+4 goto_tab 4
map alt+0 last_used_tab

# ----- Splits -----
# ----- Create Kitty splits (unchanged) -----
map ctrl+alt+enter launch --location=hsplit --cwd=current
map ctrl+shift+enter launch --location=vsplit --cwd=current
# map ctrl+alt+enter kitten split_window.py hsplit
# map ctrl+shift+enter kitten split_window.py vsplit

# ---- unified movement (one chord for both nvim + kitty) ----
map ctrl+h neighboring_window left
map ctrl+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+l neighboring_window right
# When Neovim is focused, *unset* the Kitty mappings so keys go to nvim
map --when-focus-on var:IS_NVIM ctrl+h
map --when-focus-on var:IS_NVIM ctrl+j
map --when-focus-on var:IS_NVIM ctrl+k
map --when-focus-on var:IS_NVIM ctrl+l

# ---- unified resizing (Alt-* works in both) ----
# 3 = step size; tweak to taste
map alt+h kitten relative_resize.py left 3
map alt+j kitten relative_resize.py down 3
map alt+k kitten relative_resize.py up   3
map alt+l kitten relative_resize.py right 3
# Let Neovim handle Alt-resize when it has focus
map --when-focus-on var:IS_NVIM alt+h
map --when-focus-on var:IS_NVIM alt+j
map --when-focus-on var:IS_NVIM alt+k
map --when-focus-on var:IS_NVIM alt+l

# Matugen colors
include colors.conf
